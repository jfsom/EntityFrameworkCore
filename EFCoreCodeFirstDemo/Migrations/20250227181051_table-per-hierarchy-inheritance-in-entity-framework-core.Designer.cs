// <auto-generated />
using System;
using EFCoreCodeFirstDemo.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreCodeFirstDemo.Migrations
{
    [DbContext(typeof(EFCoreDbContext))]
    [Migration("20250227181051_table-per-hierarchy-inheritance-in-entity-framework-core")]
    partial class tableperhierarchyinheritanceinentityframeworkcore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");

                    b.HasDiscriminator<string>("PaymentType").HasValue("Payment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.CardPayment", b =>
                {
                    b.HasBaseType("EFCoreCodeFirstDemo.Entities.Payment");

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CardType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Card");
                });

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.CashOnDeliveryPayment", b =>
                {
                    b.HasBaseType("EFCoreCodeFirstDemo.Entities.Payment");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PaymentReceived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentReceivedDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("COD");
                });

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.UPIPayment", b =>
                {
                    b.HasBaseType("EFCoreCodeFirstDemo.Entities.Payment");

                    b.Property<string>("UPIId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPITransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("UPI");
                });
#pragma warning restore 612, 618
        }
    }
}
