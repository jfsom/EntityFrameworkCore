// <auto-generated />
using EFCoreCodeFirstDemo.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreCodeFirstDemo.Migrations
{
    [DbContext(typeof(EFCoreDbContext))]
    [Migration("20250227033945_Example-to-Understand-Table-Per-Type-TPT-in-EF-Core")]
    partial class ExampletoUnderstandTablePerTypeTPTinEFCore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.BaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommonProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BaseTable");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.DerivedEntity1", b =>
                {
                    b.HasBaseType("EFCoreCodeFirstDemo.Entities.BaseEntity");

                    b.Property<string>("Property1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DerivedTable1");
                });

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.DerivedEntity2", b =>
                {
                    b.HasBaseType("EFCoreCodeFirstDemo.Entities.BaseEntity");

                    b.Property<string>("Property2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DerivedTable2");
                });

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.DerivedEntity1", b =>
                {
                    b.HasOne("EFCoreCodeFirstDemo.Entities.BaseEntity", null)
                        .WithOne()
                        .HasForeignKey("EFCoreCodeFirstDemo.Entities.DerivedEntity1", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreCodeFirstDemo.Entities.DerivedEntity2", b =>
                {
                    b.HasOne("EFCoreCodeFirstDemo.Entities.BaseEntity", null)
                        .WithOne()
                        .HasForeignKey("EFCoreCodeFirstDemo.Entities.DerivedEntity2", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
